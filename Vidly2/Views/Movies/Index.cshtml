@model IEnumerable<Vidly2.Models.Movie>
@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Movies</h2>


@Html.ActionLink("NEW MOVIE", "New", "Movies", new { @class = "btn btn-primary" })

<br /><br />

@* 1. add id="movies" to table *@
<table id="movies" class="table table-hover table-bordered">
    <thead>
        <tr>
            <th>Movie Name</th>
            <th>Genre</th>
            <th>Delete</th>
        </tr>

    </thead>
    <tbody>

        @* 3. remove foreach, no longer needed since movies are rendered by DataTable using /api/movies/*@
        @*@foreach (var movie in Model)
            {
            <tr>
                <td>
                    @Html.ActionLink(@movie.Name, "Edit", "Movies", new { id = movie.Id }, null)
                </td>
                <td>
                    @movie.Genre.Name
                </td>
            </tr>
            }*@


    </tbody>

</table>

@section scripts
{
    <script>
        $(document).ready(function () {
            // 2. create a local var to the table and add the DataTable plug-in
            var table = $("#movies").DataTable({
                ajax: { // 3. add ajax source to grab the data from the api
                    url: "/api/movies", // url to the api
                    method: "GET", // method type, optional if method = GET
                    dataSrc: ""
                },
                columns: [ // columns parameter takes an array of objects
                    { // 1. column Display list of names with links to movies/edit
                        data: "name", // data property set to the name property of json obj sent by the api
                        render: function (data, type, movie) {
                            return "<a href='/movies/edit/" + movie.id + "'>" + data + "</a>";
                        }
                    },
                    { // 2. column display movie genre
                        data: "genre.name"
                    },
                    { // 3. column Delete button
                        data: "id", // select id property for data so it can be provided in the button
                        render: function (data, type, row) { // rendering the button
                            return "<button class='btn btn-primary js-delete' data-movie-id='"
                                + data
                                + "' data-movie-name='" + row.name + "' >Delete</button>";
                        }
                    }


                ]
            });



            $("#movies").on("click", // 1. param - click event
                ".js-delete", // 2. param - filter based on what the event will trigger
                function () { // 3. param - callback function
                    var currentButton = $(this); // creating a reference to the button
                    bootbox.confirm(("Are you sure you want to delete movie: \"" // unsing bootbox to confirm deletion
                        + currentButton.attr("data-movie-name") + "\"?"), // 1. param - string displayed to user
                        function (result) { // 2. param callback function with result(bool) param
                            if (result) {
                                alert("Successful deletion of movie: \"" + currentButton.attr("data-movie-name")+"\"");
                            }

                        });


                });

        });
    </script>
}


