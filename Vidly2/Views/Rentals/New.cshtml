@model dynamic

@{
    ViewBag.Title = "New Rental Form";
    // the layout is set in /Views/_ViewStart.cshtml" so it doesent have to be added to every view
    //Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>New Rental Form</h2>

<form id="newRental">

    <div class="form-group">
        <label>Customer</label>
        <div class="tt-container">
            <input type="text" value="" data-rule-validCustomer="true" @*custom attribute for custom validation*@
                   required id="customer" class="form-control" />
        </div>
    </div>

    <div class="form-group">
        <label>Movie</label>
        <div class="tt-container">
            <input type="text" value="" id="movie" class="form-control" />
        </div>
    </div>

    <div class="row">
        <div class="col-md-4 col-sm-4">
            <ul id="movies" class="list-group"></ul>
        </div>
    </div>

    <button class="btn btn-primary">Submit</button>

</form>

@section scripts{

    @*adding client side validation #1 *@
    
    @Scripts.Render("~/bundles/jqueryval")

    <script>
        $(document).ready(function () {

            var vm = { // viewModel where we store form data and send back to the api
                movieIds: [] // property to store movie Ids
            };

            var customers = new Bloodhound({
                datumTokenizer: Bloodhound.tokenizers.obj.whitespace('name'),
                queryTokenizer: Bloodhound.tokenizers.whitespace,
                remote: {
                    url: '/api/customers?query=%QUERY',
                    wildcard: '%QUERY'
                }
            });

            $('#customer').typeahead({ //1st param can be null or obj
                minLength: 3, // typeahead will query the server if there is minimum 3 characters
                highlight: true // highlights the typed characters
            }, {
                    name: 'customers',
                    display: 'name',
                    source: customers
                }).on("typeahead:select", function (e, customer) {
                    vm.customerId = customer.id;
                });


            var movies = new Bloodhound({
                datumTokenizer: Bloodhound.tokenizers.obj.whitespace('name'),
                queryTokenizer: Bloodhound.tokenizers.whitespace,
                remote: {
                    url: '/api/movies?query=%QUERY',
                    wildcard: '%QUERY'
                }
            });

            $("#movie").typeahead({
                minLength: 3,
                highlight: true
            }, {
                    name: "movies",
                    display: "name",
                    source: movies
                }).on("typeahead:select", function (e, movie) {
                    $("#movies").append("<li class='list-group-item'>" + movie.name + "</li>"); // refers to the <ul> element

                    $("#movie").typeahead("val", ""); //clear the textbox after the movie is added to the list

                    vm.movieIds.push(movie.id); // add the movie id to the vm property
                });

            // adding a custom validator
            $.validator.addMethod("validCustomer", // name
                function () {
                    return vm.customerId && vm.customerId !== 0;
                }, "Please select a valid customer"); // custom error message

            $("#newRental").validate({ // configuration obj for validate function
                submitHandler: function () {
                    e.preventDefault(); // prevents the form to be submited

                    $.ajax({
                        url: "/api/newRentals",
                        method: "post",
                        data: vm
                    })
                        .done(function () {
                            toastr.success("Rentals successfully recorded");
                        })
                        .fail(function () {
                            toastr.error("Something went wrong");
                        });
                }

            });

            /* code without clientside validation
            $("#newRental").submit(function (e) {
                e.preventDefault(); // prevents the form to be submited

                $.ajax({
                    url: "/api/newRentals",
                    method: "post",
                    data: vm
                })
                    .done(function () {
                        toastr.success("Rentals successfully recorded");
                    })
                    .fail(function () {
                        toastr.error("Something went wrong");
                    });
            });
            */

        });

    </script>
}